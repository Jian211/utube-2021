7/20
    Using the blueprint complete the server.js file and create an Express server.
    This server should have 4 GET routes.
    The routes are /, /about, /contact and /login.
    All the routes should return HTML to the client.

7/21
    URL Logger: This middleware should log the URL that is being visited.
    Time Logger: This middleware should log the year, month and day o   f the request.
    Security Logger: This middleware should log secure if the protocol is https     else log insec  ure.
    Protector Middleware: This middleware should stop the user if it's trying to go to /protected

7/23
    Create 3 routers: globalRouter, storyRouter and userRouter
    Inside of the routers create the following GET routes:
    /
    /trending
    /new
    /join
    /login
    /users
    /users/:id
    /users/edit-profile
    /stories/:id
    /stories/:id/edit
    /stories/:id/delete
    Distribute these routes between the globalRouter, storyRouter and userRouter

7/26
    Replace all the res.send in the controllers with res.render().
    Create .pug templates for each controller.
    All templates should extend from a layout.pug.
    Create partials for footer, head and header.
    Your templates should get a pageTitle variable from the controllers.
    Add default styles using MVP.css.
    (Pug is already configured on the blueprint)

7/28
    On today's bluprint, you will find 3 functions on the movieController.jsfile. Your task today is to complete them!

    home should list all the movies.
    movieDetail should show a movie based on the :id
    filterMovie should filter for a movies based on the rating or the year
    There is a db.js file already made for you, you don't need to touch it. The db.js exports the following functions:

    getMovieById finds a movie with a provided ID (i.e: getMovieById(123))
    getMovies returns an array of all the movies on the DB (i.e: getMovies())
    getMovieByMinimumRating returns an array of the movies with a rating bigger than X (i.e: getMovieByMinimumRating(5))
    getMovieByMinimumYear returns an array of the movies published after a year X (i.e: getMovieByMinimumYear(2012))
    You also have to complete the movieRouter.js file. Make three URLS: / /:id and /filter

    The views folder is empty. Make partials, layouts and mixins to show the movies.

    .render("search",{
        pageTitle : " search",
        year,
        rating,       
        movieRating,
        movieYears